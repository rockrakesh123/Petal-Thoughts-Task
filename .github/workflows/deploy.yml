name: Deploy to AWS ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Terraform + Docker + ECS Deploy
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      AWS_DEFAULT_REGION: us-east-1

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    - name: Terraform Init
      run: terraform init
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      working-directory: ./Eks-terraform

    - name: Terraform Validate
      run: terraform validate
      working-directory: ./Eks-terraform

    - name: Terraform Apply
      run: terraform apply -auto-approve
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      working-directory: ./Eks-terraform

    - name: Log in to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1
      with:
        mask-password: false
        registry-type: private
        skip-logout: false

    - name: Build and Tag Docker image
      run: |
        IMAGE_URI=043509775301.dkr.ecr.us-east-1.amazonaws.com/medusa-backend:latest
        docker build -t medusa-backend:latest .
        docker tag medusa-backend:latest $IMAGE_URI

    - name: Push Docker image to ECR
      run: |
        IMAGE_URI=043509775301.dkr.ecr.us-east-1.amazonaws.com/medusa-backend:latest
        docker push $IMAGE_URI

    - name: Update ECS Service
      run: |
        aws ecs update-service \
          --cluster medusa-cluster \
          --service medusa-service \
          --force-new-deployment \
          --region us-east-1
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
